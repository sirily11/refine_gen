# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.3
      - name: Install dependencies
        run: dart pub get
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
      - name: Analyze project source
        run: dart analyze
      - name: Run tests
        run: dart test
      - name: Compile
        run: dart compile exe bin/refine_gen.dart -o dist/refine_gen
      - name: Copy templates
        run: cp -R templates dist/templates
      - uses: papeloto/action-zip@v1
        with:
          files: dist/
          dest: ${{ matrix.os }}.zip
          
     


  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: ${{ (github.event.pusher.name != 'github action') && (github.ref == 'refs/heads/main') }}
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          branch: main